option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: main:app
    NumProcesses: 4
    NumThreads: 20

  aws:elasticbeanstalk:application:environment:
    FLASK_APP: main.py
    FLASK_ENV: production

  aws:elasticbeanstalk:environment:proxy:
    ProxyServer: nginx

  aws:autoscaling:launchconfiguration:
    DisableIMDSv1: true
    InstanceType: t3.small
    SecurityGroups: '`{"Ref" : "AWSEBSecurityGroup"}`'
    EC2KeyName:

  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 4

  aws:autoscaling:trigger:
    MeasureName: CPUUtilization
    Statistic: Average
    Unit: Percent
    Period: 5
    BreachDuration: 5
    UpperThreshold: 75
    UpperBreachScaleIncrement: 1
    LowerThreshold: 30
    LowerBreachScaleIncrement: -1

  aws:elasticbeanstalk:environment:
    LoadBalancerType: application
    ServiceRole: aws-elasticbeanstalk-service-role

  aws:elbv2:loadbalancer:
    SecurityGroups: '`{"Ref" : "AWSEBSecurityGroup"}`'
    IdleTimeout: 120

  aws:elbv2:listener:443:
    ListenerEnabled: false

  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    ConfigDocument:
      Version: 1
      CloudWatchMetrics:
        Instance:
          CPUUtilization:
            - name: name
              value: CPUUtilization
            - name: unit
              value: Percent
          ApplicationLatencyP99:
            - name: name
              value: ApplicationLatencyP99
            - name: unit
              value: Seconds
        Environment:
          ApplicationRequests5xx:
            - name: name
              value: ApplicationRequests5xx
            - name: unit
              value: Count
          InstanceHealth:
            - name: name
              value: InstanceHealth
            - name: unit
              value: Count

files:
  "/etc/nginx/conf.d/https_custom.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      client_max_body_size 50M;
      server_tokens off;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header X-Frame-Options SAMEORIGIN;

  "/etc/nginx/conf.d/timeout.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      proxy_connect_timeout 300s;
      proxy_send_timeout 300s;
      proxy_read_timeout 300s;

commands:
  01_install_dependencies:
    command: |
      yum install -y python3-pip python3-devel postgresql-devel gcc
    ignoreErrors: false

  02_upgrade_pip:
    command: |
      pip3 install --upgrade pip
    ignoreErrors: false

  03_setup_logs:
    command: |
      mkdir -p /var/log/flask
      chown wsgi:wsgi /var/log/flask
      touch /var/log/flask/app.log
      chown wsgi:wsgi /var/log/flask/app.log
    ignoreErrors: false

container_commands:
  01_pip_install:
    command: |
      pip install -r requirements.txt || pip3 install -r requirements.txt

  02_collectstatic:
    command: |
      mkdir -p ./static/collected
      python manage.py collectstatic --noinput
    ignoreErrors: true

  03_create_config:
    command: |
      mkdir -p ./instance
      echo "import os" > ./instance/config.py
      echo "SECRET_KEY = os.environ.get('SESSION_SECRET', 'dev-key-do-not-use-in-production')" >> ./instance/config.py
      echo "DEBUG = False" >> ./instance/config.py
    ignoreErrors: false

  04_health_check:
    command: |
      curl -s http://localhost:5000/health || echo "Health check will be available after deployment"
    ignoreErrors: true
