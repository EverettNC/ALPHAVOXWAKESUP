from alphavox_input_nlu import AlphaVoxInputProcessor
processor = AlphaVoxInputProcessor()

@app.route("/process-input", methods=["POST"])
def process_input():
    input_text = request.form.get("input_text", "")
    if not input_text:
        return jsonify({"error": "No input provided"}), 400
    interaction = {"type": "text", "input": input_text}
    user_id = session.get("user_id", "anonymous")
    result = processor.process_interaction(interaction, user_id)
    return jsonify(result)

@app.route("/speak/<gesture>", methods=["POST"])
def speak(gesture):
    data = request.json
    features = data.get("features", [0.5, 0.5, 90, 90])
    interaction = {"type": "gesture", "input": features}
    user_id = session.get("user_id", "anonymous")
    result = processor.process_interaction(interaction, user_id)
    speech_url = text_to_speech(result.get("message", "Gesture not recognized"), 
                               emotion=result.get("emotion", "neutral"), 
                               emotion_tier="moderate")
    return jsonify({
        "status": "success",
        "message": result.get("message", "Gesture not recognized"),
        "intent": result.get("intent", "unknown"),
        "confidence": result.get("confidence", 0.0),
        "expression": result.get("emotion", "neutral"),
        "emotion_tier": "moderate",
        "speech_url": speech_url
    })

@app.route("/symbol/<symbol_name>", methods=["POST"])
def process_symbol(symbol_name):
    interaction = {"type": "symbol", "input": symbol_name}
    user_id = session.get("user_id", "anonymous")
    result = processor.process_interaction(interaction, user_id)
    speech_url = text_to_speech(result.get("message", "Symbol not recognized"), 
                               emotion=result.get("emotion", "neutral"), 
                               emotion_tier="moderate")
    return jsonify({
        "status": "success",
        "message": result.get("message", "Symbol not recognized"),
        "intent": result.get("intent", "unknown"),
        "confidence": result.get("confidence", 0.0),
        "expression": result.get("emotion", "neutral"),
        "emotion_tier": "moderate",
        "symbol": symbol_name,
        "speech_url": speech_url
    })